<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
    "-//Apache Software Foundation//DTD Struts Configuration 2.1.7//EN"
    "http://struts.apache.org/dtds/struts-2.1.7.dtd">
<struts>
	<!--
		package：包，用于对Action进行封装。 1、name：包名，根元素下可以有多个包，彼此之间不能重名。
		2、extends：继承，用于指定继承的包，相当于将继承包下的配置信息复制到了当前包下。
		3、namespace：命名空间，用于规定Action的访问路径，必须以“/”开头。 
		4、请求Action时，按照如下格式拼写URL：
		http://IP:PORT/ProjectName/NAMESPACE/ACTIONNAME
	-->
<!--	临时存放目录-->
	<constant name="struts.multipart.saveDir" value="D:\"></constant>
		<package name="day02" namespace="/login" extends="struts-default,json-default">
			<action name="loginAction" class="testAction">
				<!--
                    result：输出组件，用于转发、重定向、直接输出。
                    1、name：名称，一个action下可以有多个result，彼此之间不能重名。
                    2、默认做转发，标记内容设置成转发的页面。
                -->
				<result name="home">/jsp/home.jsp</result>
				<result name="error">error.jsp</result>
				<result name="frontlogin">/jsp/fronlogin.jsp</result>
				<result name="rejson" type="json">
					<param name="root">map</param>
				</result>
				<result name="dowbox" type="json">
					<param name="root">listHashMap</param>
				</result>
				<result name="verific" type="json">
					<param name="root">map</param>
				</result>
			</action>
			<action name="imageAction" class="imageAction">
				<result name="frontlogin" type="stream">
					<param name="inputName">imageStream</param>

				</result>

			</action>
		</package>
	<package name="day01" namespace="/jsp" extends="struts-default,json-default">
<!--		<interceptors>-->
<!--			<interceptor name="logininterceotpr" class="inter.LoginInter"></interceptor>-->
<!--			<interceptor-stack name="mystack">-->
<!--				<interceptor-ref name="logininterceotpr"></interceptor-ref>-->
<!--				<interceptor-ref name="defaultStack"></interceptor-ref>-->
<!--			</interceptor-stack>-->

<!--		</interceptors>-->
<!--		安全性-->
<!--		<action name="tonlogin">-->
<!--			<result name="frontlogin">/WEB-INF/admin/frontlogin.jsp</result>-->
<!--		</action>-->
<!--		默认这个包中的所有Action都要通过一次-->
<!--		<default-interceptor-ref name="mystack"></default-interceptor-ref>-->
		<!-- 全局result -->
<!--		<global-results>-->
<!--			<result name="login">${pageContext.request.contextPath}/login.jsp</result>-->
<!--		</global-results>-->
		<!--
			action：业务控制器，用于注册业务控制器组件（类）。 
			1、name：action名称，用于规定Action的访问路径。
			一个包下可以有多个action，彼此之间不能重名。 
			2、class：业务控制器组件，用于指定业务控制器对应的类。
			3、method：方法，用于指定访问当前action时要调用的方法。method="execute"
		-->

        <action name="dataAction" class="userAction">
            <result name="userdata">/jsp/admin.jsp</result>
			<result name="menu">/jsp/home.jsp</result>
			<result name="dowbox" type="json">
				<param name="root">viewmenu</param>
			</result>
        </action>
<!--		权限管理中的角色下拉框获取-->
		<action name="occAction" class="testAction">
			<result name="dowbox">/jsp/adminrole.jsp</result>
		</action>
		<!--注册功能实现-->
		<action name="testAction" class="testAction" method="reg">

			<result name="home">/jsp/home.jsp</result>
			<result name="error">error.jsp</result>
			<result name="frontlogin">/jsp/frontlogin.jsp</result>
			<!--			<interceptor-ref name="logininterceotpr"></interceptor-ref>-->
<!--			<interceptor-ref name="mystack"></interceptor-ref>-->
		</action>
	</package>
	<package name="filetest" namespace="/filetest"
			 extends="struts-default,json-default">

		<action name="uploadAction" class="uploadFileAction">
			<result name="success">/index.jsp</result>
			<result name="frontlogin" type="json">
				<param name="root">map</param>
			</result>
			<interceptor-ref name="fileUploadStack">
				<param name="maxmumsize">5242880</param>
				<param name="allowedTypes">application/vnd.ms-powerpoint,image/png,image/gif,image/jpg</param>
			</interceptor-ref>
			<!-- defaultStack,可以取到其他的数据，如用户名等 -->
			<interceptor-ref name="defaultStack"></interceptor-ref>
		</action>
		<action name="downLoad" class="downloadAction">
			<!--结果类型为String-->
			<result type="stream">

				<param name="contentType">${contentType}</param>
				<!--默认就是inputStream,它将会指示StreamResult通过
                  inputName属性值的getter和setter方法，如这里就是
                  getInputStream()来获取下载文件的内容,意味着Action
                  要有这个方法
                  -->
				<param name="inputName">inputString</param>
				<!--默认为inline（在线打开）,设置为attachment将会告诉浏览器下载
                    该文件,filename指定下载文件时的文件名，若未指定将会以浏览器
                    页面名作为文件名,如：以download.action作为文件名
                  -->
				<param name="contentDisposition">attachment;filename=${filename}</param>
				<!--指定下载文件的缓冲大小-->
				<param name="bufferSize">4096</param>

			</result>
		</action>
	</package>

</struts>